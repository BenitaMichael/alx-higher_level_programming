The ``100-matrix_mul`` module
=============================

This module defines a matrix multiplication function ``matrix_mul(m_a, m_b)``.

Importing function from the module:

    >>> matrix_mul = __import__('100-matrix_mul').matrix_mul

CASES:
*Multiplying two matrices

    >>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
    [[7, 10], [15, 22]]

Multiplying two matrices 2

    >>> matrix_mul([[1, 2]], [[3, 4], [5, 6]])
    [[13, 16]]

*Passing None as a matrix

    >>> matrix_mul(None, None)
    TypeError: m_a must be a list

*Passing None as a matrix

    >>> matrix_mul([[5, 9]], None)
    Traceback (most recent call last):
    	      ...
    TypeError: m_b must be a list

*Passing a tuple as a matrix

    >>> matrix_mul((1, 5, 9), [[5, 1], [9.5], [5.9]])
    TypeError: m_a must be a list

*Passing a string as a matrix

    >>> matrix_mul([[3, 3], [4, 4]], "Budybye")
    TypeError: m_b must be a list

*Passing a list of tuples

   >>> matrix_mul([9, 5, 1)], [(1), (9)])
   TypeError: m_a must be a list of lists

*Passing a list of string

   >>> matrix_mul([[]], ["Oukies"])
   TypeError: m_b must be a list of lists

*Passing an empty matrix

    >>> matrix_mul([], [[3]])
    ValueError: m_a can't be empty

*Passing an empty matrix 2

    >>> matrix_mul([[1, 5]], [[]])
    ValueError: m_b can't be empty

*Passing a matrix with a list of strings 2

    >>> matrix_mul([[2, 4, 6], [3, 9, 11]], [[3], ['5'], [9]])
    TypeError: m_b should contain only integers or floats

*Passing a matrix with an empty list

    >>> matrix_mul([[], [], [4, 15, 10]], [[1], [5], [9]])
    TypeError: each row of m_a must be of the same size

*Passing a matrix which its rows have different size

    >>> matrix_mul([[2, 2, 2], [4, 4, 4]], [[2])
    TypeError: each row of m_b must be of the same size

*Passing in one argument

    >>> matrix_mul([[5, 9]])
    TypeError: matrix_mul() missing 1 required positional argument: 'm_b'

*Zero arguments

    >>> matrix_mul()
    TypeError: matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'
